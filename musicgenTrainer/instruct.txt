!nvidia-smi

!git clone https://github.com/zeke-john/BoominAI.git

!cd BoominAI

!python3 -m pip install -U git+https://github.com/facebookresearch/audiocraft.git@e1f2b18f89210ab5a71bc0d31d156d84a8280d9f#egg=audiocraft
!pip install wandb pydu boto3
!export PYTHONIOENCODING=utf-8

import boto3
import os
from concurrent.futures import ThreadPoolExecutor
import concurrent.futures

ACCESS_ID = 'AKIA2J37CALYGP54WYS7'
ACCESS_KEY = 'L4FpDNOvrjrgTCwGr8pzyo07LDxJ9Jog3z0sdVnq'

s3 = boto3.client('s3', aws_access_key_id=ACCESS_ID,
         aws_secret_access_key= ACCESS_KEY)

bucket_name = 'traindatazeke'
prefix = 'smaller'  # Optional: If you want to download objects from a specific prefix
local_directory = 'local_directory'  # Replace with your local directory path

def download_file(bucket, object_name, local_path):
    print(object_name)
    s3.download_file(bucket, object_name, local_path)

def list_and_download_objects(bucket, prefix, local_directory):
    kwargs = {'Bucket': bucket, 'Prefix': prefix}

    objects = []
    while True:
        resp = s3.list_objects_v2(**kwargs)
        for obj in resp.get('Contents', []):
            objects.append(obj['Key'])
        if 'NextContinuationToken' not in resp:
            break
        kwargs['ContinuationToken'] = resp['NextContinuationToken']

    with ThreadPoolExecutor(max_workers=50) as executor:  # Adjust max_workers as needed
        future_to_key = {executor.submit(download_file, bucket, key, os.path.join(local_directory, key)): key for key in objects}
        for future in concurrent.futures.as_completed(future_to_key):
            key = future_to_key[future]
            try:
                future.result()
            except Exception as exc:
                print(f'{key} generated an exception: {exc}')

list_and_download_objects(bucket_name, prefix, local_directory)

!apt-get update && apt-get install -y ffmpeg
!python3 BoominAI/get_data.py

print('Done, now training')

!python3 BoominAI/musicgenTrainer/run.py --dataset_path local_directory/output